#!/usr/bin/perl
# @(#)fastq_detect.pl  2012-14-10  A.J.Travis

#
# Based on http://solexaqa.sourceforge.net
#

use strict;
use warnings;
use IO::Uncompress::Gunzip qw($GunzipError);

my $in;
my $format = "unknown";

# set regular expressions
my $sanger_regexp = qr/[!"#$%&'()*+,-.\/0123456789:]/;
my $solexa_regexp = qr/[\;<=>\?]/;
my $solill_regexp = qr/[JKLMNOPQRSTUVWXYZ\[\]\^\_\`abcdefgh]/;
my $all_regexp    = qr/[\@ABCDEFGHI]/;

# set counters
my $sanger_counter = 0;
my $solexa_counter = 0;
my $solill_counter = 0;

my $i      = 1;
my $line   = "";
my $qual   = 0;
my $offset = 0;

if ( $#ARGV >= 0 ) {
    if ( $ARGV[0] =~ "-q" ) {
        $qual++;
        shift @ARGV;
    }
}

if ( $#ARGV != 0 ) {
    print "usage: fastq_detect [-q] file\n";
    exit 1;
}

# open a gzip archive if file name ends in .gz
if ( $ARGV[0] =~ /\.gz$/ ) {
    $in = IO::Uncompress::Gunzip->new( $ARGV[0] )
      or die "IO::Uncompress::Gunzip failed: $GunzipError\n";
}
else {
    if ( !open( $in, $ARGV[0] ) ) {
        print "error: can't open $ARGV[0]\n";
        exit 1;
    }
}

# only check FASTQ format
if ( !( <$in> =~ /^@/ ) ) {
    print "error: not FASTQ\n";
    exit 1;
}

while (<$in>) {

    # only check first 400 lines
    if ( $i++ > 400 ) {
        last;
    }

    # retrieve qualities
    next unless $i % 4 eq 0;

    #print;
    chomp;

    # check qualities
    if (m/$sanger_regexp/) {
        $sanger_counter = 1;
        last;
    }
    if (m/$solexa_regexp/) {
        $solexa_counter = 1;
    }
    if (m/$solill_regexp/) {
        $solill_counter = 1;
    }
}

# determine format
if ($sanger_counter) {
    $format = "sanger";
    $offset = 33;
}
elsif ( !$sanger_counter && $solexa_counter ) {
    $format = "solexa";
    $offset = 64;
}
elsif ( !$sanger_counter && !$solexa_counter && $solill_counter ) {
    $format = "illumina";
    $offset = 64;
}

if ($qual) {
    print "$offset\n";
}
else {
    print "$format -Q $offset\n";
}
exit 0;
